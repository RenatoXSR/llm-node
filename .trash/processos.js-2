/*
 *
 * /js/processos.js
 *
 */

(function($) {
    $.QueryString = (function(a) {
        if (a == "") return {};
        var b = {};
        for (var i = 0; i < a.length; ++i)
        {
            var p=a[i].split('=');
            if (p.length != 2) continue;
            b[p[0]] = decodeURIComponent(p[1].replace(/\+/g, " "));
        }
        return b;
    })(window.location.search.substr(1).split('&'))
})(jQuery);

function carregarFiltros(){
	// Carregar JSON com nome dos clientes e popular o filtro correspondente (#cliente)
	$.getJSON({
		url: "/api/clientes?perPage=10000",
		success: function(data){
			const id = "#cliente"; 
			$(id).empty();
			if (data.items==null) {
				$(id).append('<option value="null">Nenhum filtro encontrado.<option>');
				return;
			}
			$(id).append('<option value="null">Selecione uma opção:</option>');
			data.items.forEach(function(item,index,arr){
				$(id).append( '<option value="' + item.id + '">' + item.num + '&nbsp;&mdash;&nbsp;' + item.alias + ' &nbsp; (' + item.fullName + ')</option>');
			});

		}});
	// Carregar JSON com nome das pessoas e popular filtros de parte cliente e parte contraria
	$.getJSON({
		url: "/api/pessoas?perPage=10000",
		success: function(data){
			$('#parteCliente').empty();
			$('#parteContraria').empty();
			if (data.items==null) {
				$('#parteCliente').append('<option value="null" disabled>Nenhum filtro encontrado.<option>');
				$('#parteContraria').append('<option value="null" disabled>Nenhum filtro encontrado.<option>');
				return;
			}
			$('#parteCliente').append('<option value="null" disabled>Selecione uma opção:</option>');
			$('#parteContraria').append('<option value="null" disabled>Selecione uma opção:</option>');
			data.items.forEach(function(item,index,arr){
				if (item.eParteCliente=='S') {
					$('#parteCliente').append( '<option value="' + item.id + '">' + item.fullName + ')</option>');
				}
				if (item.eParteContraria=='S') {
					$('#parteContraria').append( '<option value="' + item.id + '">' + item.fullName + ')</option>');
				}
			});

		}});
	// Carregor JSON com as categorias, iterar sobre eles para mapear por 'tipo', e popular os filtros correspondentes, pelo nome do campo (deve ser idêntico no view renderizado)
	$.getJSON({
		url: "/api/categorias",
		success: function(data){
			//console.log(JSON.stringify(data));
			var filtros = {};
			data.items.forEach(function(item,index,array){
				if (filtros[item.tipo]===undefined){
					console.log("Filtro "+ item.tipo +" ainda não definido. Vamos definir agora.");
					filtros[item.tipo]=[{}];
					//console.log(filtros[item.tipo].length);
					$('#'+item.tipo).empty();
					$('#'+item.tipo).append('<option value="null">Selecione uma opção:</option>');
				}
				console.log(JSON.stringify(item));
				filtros[item.tipo].push(item);
			});
			for (filtro in filtros){
				console.log("O filtro '" + filtro + "' contém " + filtro.length + " filhotes.");
				//console.log(JSON.stringify("Listando " + filtro + ": " + filtro.alias + " - " + filtro.id + " EOF"));
				//for (filtroItem in filtro) {
				//filtro.forEach(function(filtroItem,index,arr) {
				for (var j = 0; j < filtro.length; j++) { 
					console.log('Loop filtroItem in filtro in filtros: ' + JSON.stringify(filtro[j]));
					$('#'+filtro[j].tipo).append( '<option value="' + filtro[j].id + '">' + filtro[j].alias + ' ' + filtro[j].fullName + '</option>');
				//});
				}
			}

			
		}
	});
}

/*
 *
 * function carregarComarcas(uf)
 * returns: void
 * description: loads every courthouse and county.
 */
/*function carregarComarcas(uf){
	$.getJSON({
		url:'/api/comarcas',
		success: function comarcasSucesso(data){
			var fields=data.comarcas;
			$.each(fields, function(i,option){
				$('comarca').append('<option name="' + option.id + '">' + option.alias + '</option>');
				});
			}
		});
	} // [END] carregarComarcas
*/
function tabelaProcessosLinha(i,processo){
	var retorno = '<tr>';
	retorno += '<td>'+processo.acomp;
	if (processo.link!='') {
		retorno+= '&nbsp;(<a href="' + processo.link + '" target="_blank">Abrir link</a>)';
		}
	retorno += '</td>';
	retorno += '<td><a href="/processos/' + processo.id + '">' + processo.numero + '&nbsp;<small>(Abrir)</small></a></td>';
	retorno += '<td>'+ processo.cliente + '</td>';
	retorno += '<td>'+ processo.parteCliente + '</td>';
	retorno += '<td>'+ processo.parteContraria + '</td>';
	retorno += '<td>'+ processo.advogado + '</td>';
	retorno += '<td>'+ processo.responsavel + '</td>';
	retorno += '<td>'+ processo.comarca + '/'+ processo.estado + '&nbsp;(' + processo.instancia + ')<br /><small>' + processo.legacyComarca + '</small></td>';
	retorno += '<td>'+ processo.numVara + '&nbsp;' + processo.natVara + '</td>';
	retorno += '<td>'+ processo.fase + '/' + processo.status+ '</td>';
	retorno += '<td>'+ processo.observacoes + '</td>';
	retorno += '</tr>';
	return retorno;
	}

function carregarTabela() {
	$("#tdCarregando").addClass("fa fa-spinner fa-spin fa-lg")
	var filtros = $('#filtro').serializeArray();
	//window.alert(JSON.stringify(filtros));
	qs = '/api/processos';
	if ($.QueryString.pageToken || $.QueryString.perPage) {
		qs += '?'
	}
	if ($.QueryString.pageToken) {
		qs +='pageToken='+$.QueryString.pageToken;
		if ($.QueryString.perPage) {
			qs+='&';
		}
	}
	if ($.QueryString.perPage) {
		qs +='perPage='+$.QueryString.perPage;
	}
	
	$.ajax({
		url: qs,
		dataType: 'json',
		success: function(data){
			//var fields = $( ":input" ).serializeArray();
			var fields = data.items;
			//window.alert(JSON.stringify(fields));
			$( "#tabelaProcessos" ).empty();
			if (fields==null) {
				$("tabelaProcessos").append("Nenhum processo encontrado");
				}
			$.each( fields, function(i,linha ) {
				$( "#tabelaProcessos" ).append( tabelaProcessosLinha(i,linha));
				});
			}
		});
	}
//$( ":checkbox, :radio" ).click( carregarTabela );
$( "select" ).change( carregarTabela );


